<?xml version='1.1' encoding='UTF-8'?>
<xwikidoc version="1.5" reference="JIRA.JiraPaste.Plugin" locale="">
  <web>JIRA.JiraPaste</web>
  <name>Plugin</name>
  <language/>
  <defaultLanguage>en</defaultLanguage>
  <translation>0</translation>
  <creator>XWiki.Admin</creator>
  <creationDate>1737383663000</creationDate>
  <parent>WebHome</parent>
  <author>XWiki.Admin</author>
  <originalMetadataAuthor>XWiki.Admin</originalMetadataAuthor>
  <contentAuthor>XWiki.Admin</contentAuthor>
  <date>1737580664000</date>
  <contentUpdateDate>1737383663000</contentUpdateDate>
  <version>1.57</version>
  <title>Plugin</title>
  <comment/>
  <minorEdit>true</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content/>
  <object>
    <name>JIRA.JiraPaste.Plugin</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>47fff226-8afc-434f-84d1-05c7414bb248</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>(function () {
  'use strict';
  var $ = jQuery;
  CKEDITOR.plugins.add('timestamp', {
    init: function (editor) {
      let docUrl = new XWiki.Document(XWiki.Model.resolve('JIRA.JiraPaste.GetConfiguredUrls', XWiki.EntityType.DOCUMENT)).getURL('get', 'outputSyntax=plain');
      $.getJSON(docUrl)
        .done(function (response) {
          if (response.length &lt;= 0) {
            return;
          }
          editor.config.jiraInstances = editor.config.jiraInstance || [];
          Array.prototype.push.apply(editor.config.jiraInstances, response);
          editor.on('paste', function (event) {
            let pastedURL = null;
            if (URL.canParse(event.data.dataValue)) {
              pastedURL = new URL(event.data.dataValue)
            } else {
              let parsedPaste = CKEDITOR.htmlParser.fragment.fromHtml(event.data.dataValue);
              if (!parsedPaste.children || parsedPaste.children.length != 1) {
                return;
              }
              let pastedElement = parsedPaste.children[0];
              if (pastedElement.name != 'a') {
                return;
              }
              if (!pastedElement.attributes || !pastedElement.attributes['href'] || !URL.canParse(pastedElement.attributes['href'])) {
                return;
              }
              pastedURL = new URL(pastedElement.attributes['href']);
            }
            let matchingInstance;
            for (var i = 0; i &lt; editor.config.jiraInstances.length; i++) {
              let instance = editor.config.jiraInstances[i];
              if (instance.url &amp;&amp; pastedURL.origin.startsWith(instance.url)) {
                matchingInstance = instance;
                break;
              }
            }
            if (!matchingInstance) {
              return;
            }

            let paramStyle = 'list';
            let macroInline = false;
            let paramSource = 'jql';
            let macroContent = pastedURL.searchParams.get('jql');
            if (!macroContent) {
              const regex = /[A-Z]+-[0-9]+/g;
              macroContent = pastedURL.pathname.match(regex);
              macroContent = macroContent &amp;&amp; macroContent[0];
              paramStyle = 'enum';
              macroInline = true;
              paramSource = 'list';
            }
            
            if (!macroContent) {
              return;
            }
            event.cancel();
            editor.execCommand('xwiki-macro-insert', {
              name: "jira",
              inline: macroInline,
              parameters: {
                id: matchingInstance.id || '',
                url: (!matchingInstance.id &amp;&amp; matchingInstance.url) || '',
                style: paramStyle,
                fields: 'type,key,summary,status',
                source: paramSource,
                maxCount: 5
              },
              content: macroContent
            });
          });
        })
        .fail(function (_jqxhr, textStatus, error) {
          console.log(`Could not initialize the Jira Paste plugin. Failed to retrieve the configured jira instances. Error [${error}]. Message [${textStatus}].`);
        });
    }
  });
})();
</code>
    </property>
    <property>
      <name></name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use></use>
    </property>
  </object>
</xwikidoc>